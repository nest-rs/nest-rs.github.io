initSidebarItems({"enum":[["ErrorKind","The kind of an error."],["Event","Represents events passed form `Window`."],["Key",""],["KeyState",""]],"fn":[["rect","Takes two points and creates a rectangle from those two points."]],"mod":[["error",""]],"struct":[["Color","Color in `(red, green, blue, alpha)` tuple form."],["Combine","`Combine` represents the combination of two shapes."],["Error","The Error type."],["Frame","`Frame` can be used to make multiple separate draw calls in one frame. When it drops/exits scope, it automatically updates the window with the frame, but it can also be finished by calling the method `finish()`."],["Positions","Three positions which form a matrix for shader purposes"],["Rect","Two points make a rectangle."],["RendTri","Renderable triangle which includes color and texture information."],["Rotate","`Rotate` represents a shape which has been rotated."],["RotateIter","Iterator which is produced by `Rotate`"],["Translate","`Translate` represents a shape which has been translated."],["TranslateIter","Iterator which is produced by `Translate`"],["Tri","A triangle primitive which enters the shader pipeline as a single vertex and is the only primitive in nest"],["Window","Represets a window with OpenGL context."]],"trait":[["ResultExt","Additional methods for `Result`, for easy interaction with this crate."],["Shape","Trait for structs to be drawn with `Frame::draw`"],["ToSeconds","Trait for things which can be converted into seconds. This should not be used for high-precision accuracy."]],"type":[["Result","Convenient wrapper around `std::Result`."]]});